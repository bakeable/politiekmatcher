# Generated by Django 5.2.4 on 2025-07-31 07:14

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("content", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="Email for profile retrieval",
                        max_length=254,
                        null=True,
                    ),
                ),
                (
                    "is_completed",
                    models.BooleanField(
                        default=False, help_text="Has user completed all statements"
                    ),
                ),
                ("session_key", models.CharField(blank=True, max_length=40, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_active", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "User Profile",
                "verbose_name_plural": "User Profiles",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="EmailVerification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=254)),
                ("token", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("is_verified", models.BooleanField(default=False)),
                ("expires_at", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="profiles.userprofile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Email Verification",
                "verbose_name_plural": "Email Verifications",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PartyMatch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "match_percentage",
                    models.FloatField(help_text="Match percentage (0-100)"),
                ),
                (
                    "agreement_score",
                    models.FloatField(default=0.0, help_text="Agreement score"),
                ),
                (
                    "confidence_weighted_score",
                    models.FloatField(
                        default=0.0, help_text="Confidence weighted score"
                    ),
                ),
                (
                    "importance_weighted_score",
                    models.FloatField(
                        default=0.0, help_text="Importance weighted score"
                    ),
                ),
                ("total_statements", models.IntegerField(default=0)),
                ("matching_statements", models.IntegerField(default=0)),
                ("calculated_at", models.DateTimeField(auto_now=True)),
                (
                    "party",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="content.politicalparty",
                    ),
                ),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="party_matches",
                        to="profiles.userprofile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Party Match",
                "verbose_name_plural": "Party Matches",
                "ordering": ["-match_percentage"],
                "unique_together": {("profile", "party")},
            },
        ),
        migrations.CreateModel(
            name="UserResponse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user_opinion",
                    models.TextField(help_text="User's opinion on the statement"),
                ),
                (
                    "confidence",
                    models.IntegerField(
                        choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)],
                        default=3,
                        help_text="How confident is the user in their opinion (1-5)",
                    ),
                ),
                (
                    "importance",
                    models.IntegerField(
                        choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)],
                        default=3,
                        help_text="How important is this topic to the user (1-5)",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="responses",
                        to="profiles.userprofile",
                    ),
                ),
                (
                    "statement",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="content.statement",
                    ),
                ),
            ],
            options={
                "verbose_name": "User Response",
                "verbose_name_plural": "User Responses",
                "unique_together": {("profile", "statement")},
            },
        ),
    ]
