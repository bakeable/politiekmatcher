# Generated by Django 5.2.4 on 2025-07-31 06:51

import django.db.models.deletion
import django.utils.timezone
import pgvector.django.vector
from django.db import migrations, models
from pgvector.django import VectorExtension


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        VectorExtension(),
        migrations.CreateModel(
            name="PoliticalParty",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Volledige naam van de partij", max_length=200
                    ),
                ),
                (
                    "abbreviation",
                    models.CharField(
                        help_text="Afkorting (bijv. VVD, PvdA)",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Beschrijving van de partij"
                    ),
                ),
                (
                    "website_url",
                    models.URLField(blank=True, help_text="Website van de partij"),
                ),
                ("logo_url", models.URLField(blank=True, help_text="URL naar logo")),
                (
                    "logo_object_position",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "color_hex",
                    models.CharField(
                        blank=True,
                        help_text="Partijkleur in hex (bijv. #FF0000)",
                        max_length=7,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Political Party",
                "verbose_name_plural": "Political Parties",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Theme",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("slug", models.SlugField(blank=True, null=True, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("context", models.TextField(blank=True, null=True)),
                (
                    "embedding",
                    pgvector.django.vector.VectorField(
                        blank=True, dimensions=768, null=True
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("stemwijzer", "StemWijzer"),
                            ("kieskompas", "Kieskompas"),
                            ("AI", "AI Generated"),
                            ("other", "Overig"),
                        ],
                        help_text="Bron van dit thema",
                        max_length=25,
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Topic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Naam van het thema", max_length=100, unique=True
                    ),
                ),
                ("slug", models.SlugField(blank=True, null=True, unique=True)),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Beschrijving van het thema", null=True
                    ),
                ),
                (
                    "context",
                    models.TextField(
                        blank=True,
                        help_text="Context of achtergrondinformatie",
                        null=True,
                    ),
                ),
                (
                    "embedding",
                    pgvector.django.vector.VectorField(
                        blank=True, dimensions=768, null=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ElectionProgram",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Titel van het verkiezingsprogramma", max_length=300
                    ),
                ),
                ("year", models.PositiveIntegerField(help_text="Verkiezingsjaar")),
                (
                    "election_type",
                    models.CharField(
                        choices=[
                            ("tweede_kamer", "Tweede Kamer"),
                            ("eerste_kamer", "Eerste Kamer"),
                            ("europees", "Europees Parlement"),
                            ("provinciale_staten", "Provinciale Staten"),
                            ("gemeenteraad", "Gemeenteraad"),
                        ],
                        default="tweede_kamer",
                        max_length=50,
                    ),
                ),
                (
                    "source_url",
                    models.URLField(help_text="URL naar het originele document"),
                ),
                (
                    "pdf_url",
                    models.URLField(blank=True, help_text="URL naar PDF versie"),
                ),
                (
                    "url_type",
                    models.CharField(
                        choices=[
                            ("pdf", "PDF Document"),
                            ("webpage", "Webpagina"),
                            ("doc", "Word Document"),
                            ("docx", "Word Document (DOCX)"),
                            ("html", "HTML Document"),
                            ("other", "Anders"),
                        ],
                        default="webpage",
                        help_text="Type van het bronmateriaal",
                        max_length=20,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Is dit programma nog relevant?"
                    ),
                ),
                (
                    "is_imported",
                    models.BooleanField(
                        default=False,
                        help_text="Is dit programma al ge√Ømporteerd vanuit de externe bron?",
                    ),
                ),
                (
                    "fragments_created",
                    models.BooleanField(
                        default=False,
                        help_text="Zijn er al fragmenten aangemaakt voor dit programma?",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "party",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="programs",
                        to="content.politicalparty",
                    ),
                ),
            ],
            options={
                "verbose_name": "Election Program",
                "verbose_name_plural": "Election Programs",
                "ordering": ["-year", "party__name"],
                "unique_together": {("party", "year", "election_type")},
            },
        ),
        migrations.CreateModel(
            name="Statement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slug", models.SlugField(blank=True, null=True, unique=True)),
                ("text", models.TextField(unique=True)),
                ("explanation", models.TextField(blank=True, null=True)),
                (
                    "embedding",
                    pgvector.django.vector.VectorField(
                        blank=True, dimensions=768, null=True
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("stemwijzer", "StemWijzer"),
                            ("kieskompas", "Kieskompas"),
                            ("AI", "AI Generated"),
                            ("other", "Overig"),
                        ],
                        help_text="Bron van deze stelling",
                        max_length=25,
                        null=True,
                    ),
                ),
                (
                    "theme",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="statements",
                        to="content.theme",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="theme",
            name="topic",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="themes",
                to="content.topic",
            ),
        ),
        migrations.CreateModel(
            name="ProgramFragment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField(help_text="Inhoud van het fragment")),
                (
                    "raw_content",
                    models.TextField(help_text="Ruwe inhoud van het fragment"),
                ),
                (
                    "fragment_type",
                    models.CharField(
                        choices=[
                            ("bullet_point", "Bullet Point"),
                            ("title_section", "Titel Sectie"),
                            ("heading_section", "Heading Sectie"),
                            ("subtitle_section", "Subtitle Sectie"),
                            ("text_block", "Tekstblok"),
                        ],
                        default="text_block",
                        help_text="Type van het fragment",
                        max_length=50,
                    ),
                ),
                (
                    "source_page_start",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Startpagina in het originele document",
                        null=True,
                    ),
                ),
                (
                    "source_page_end",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Eindpagina in het originele document",
                        null=True,
                    ),
                ),
                (
                    "source_reference",
                    models.CharField(
                        blank=True,
                        help_text="Volledige bronverwijzing (bijv. 'D66 Verkiezingsprogramma 2023, p. 42-44')",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "source_url",
                    models.URLField(
                        blank=True,
                        help_text="URL naar de bron waar dit fragment vandaan komt, als deze beschikbaar is",
                    ),
                ),
                ("word_count", models.PositiveIntegerField(default=0)),
                ("char_count", models.PositiveIntegerField(default=0)),
                (
                    "relevance_score",
                    models.FloatField(
                        default=1.0,
                        help_text="Relevantie score van het fragment ten opzichte van het topic",
                    ),
                ),
                (
                    "embedding",
                    pgvector.django.vector.VectorField(
                        blank=True, dimensions=768, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "program",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fragments",
                        to="content.electionprogram",
                    ),
                ),
                (
                    "topic",
                    models.ForeignKey(
                        blank=True,
                        help_text="Enkelvoudig topic voor compatibiliteit (gebruik 'topics' voor meerdere)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="fragments",
                        to="content.topic",
                    ),
                ),
            ],
            options={
                "verbose_name": "Program Fragment",
                "verbose_name_plural": "Program Fragments",
                "ordering": ["program", "source_page_start"],
            },
        ),
        migrations.CreateModel(
            name="TopicKeyword",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "keyword",
                    models.CharField(
                        help_text="Keyword related to the topic", max_length=100
                    ),
                ),
                (
                    "relevance_score",
                    models.FloatField(
                        default=1.0, help_text="Relevance score for the keyword"
                    ),
                ),
                (
                    "topic",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="keywords",
                        to="content.topic",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ParliamentarySeats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "seats",
                    models.PositiveIntegerField(
                        help_text="Aantal zetels op dat moment"
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        default=django.utils.timezone.now,
                        help_text="Datum van de zetelstand",
                    ),
                ),
                (
                    "year",
                    models.PositiveIntegerField(
                        blank=True, default=2025, help_text="Jaar van de zetelstand"
                    ),
                ),
                (
                    "is_election_result",
                    models.BooleanField(
                        default=False,
                        help_text="Is dit een verkiezingsuitslag of een tussentijdse stand",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "party",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="seats",
                        to="content.politicalparty",
                    ),
                ),
            ],
            options={
                "verbose_name": "Parliamentary Seats",
                "verbose_name_plural": "Parliamentary Seats",
                "unique_together": {("party", "date")},
            },
        ),
        migrations.CreateModel(
            name="StatementPosition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "stance",
                    models.CharField(
                        choices=[
                            ("strongly_agree", "Strongly Agree"),
                            ("agree", "Agree"),
                            ("neutral", "Neutral"),
                            ("disagree", "Disagree"),
                            ("strongly_disagree", "Strongly Disagree"),
                        ],
                        default="neutral",
                        max_length=20,
                    ),
                ),
                ("explanation", models.TextField()),
                (
                    "embedding",
                    pgvector.django.vector.VectorField(
                        blank=True, dimensions=768, null=True
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("stemwijzer", "StemWijzer"),
                            ("kieskompas", "KiesKompas"),
                            ("AI", "AI Generated"),
                            ("other", "Overig"),
                        ],
                        help_text="Bron van deze stellingpositie",
                        max_length=25,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "party",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="positions",
                        to="content.politicalparty",
                    ),
                ),
                (
                    "statement",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="positions",
                        to="content.statement",
                    ),
                ),
            ],
            options={
                "unique_together": {("statement", "party")},
            },
        ),
        migrations.CreateModel(
            name="ThemePosition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "progressive",
                    models.FloatField(
                        default=0.0,
                        help_text="Progressive stance score for the party on this theme",
                    ),
                ),
                (
                    "conservative",
                    models.FloatField(
                        default=0.0,
                        help_text="Conservative stance score for the party on this theme",
                    ),
                ),
                (
                    "left_wing",
                    models.FloatField(
                        default=0.0,
                        help_text="Left-wing stance score for the party on this theme",
                    ),
                ),
                (
                    "right_wing",
                    models.FloatField(
                        default=0.0,
                        help_text="Right-wing stance score for the party on this theme",
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("stemwijzer", "StemWijzer"),
                            ("kieskompas", "KiesKompas"),
                            ("AI", "AI Generated"),
                            ("other", "Overig"),
                        ],
                        help_text="Bron van deze themapositie",
                        max_length=25,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "party",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="theme_positions",
                        to="content.politicalparty",
                    ),
                ),
                (
                    "theme",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="positions",
                        to="content.theme",
                    ),
                ),
            ],
            options={
                "unique_together": {("theme", "party")},
            },
        ),
    ]
